{
    "$schema": "https://json-structure.github.io/meta/core/v0/#",
    "$id": "https://json-structure.github.io/meta/core/v0/#",
    "name": "JsonSchema",
    "$root": "#/$defs/SchemaDocument",
    "$defs": {
        "NoType": {
            "type": "object",
            "description": "Description and examples as base for all types",
            "abstract": true,
            "properties": {
                "description": {
                    "type": "string",
                    "description": "A description of the type"
                },
                "examples": {
                    "type": "array",
                    "items": {
                        "type": "map",
                        "values": {
                            "type": "string"
                        }
                    },
                    "description": "Examples of the type"
                }
            }
        },
        "OptionalPrimitiveType": {
            "type": "object",
            "abstract": true,
            "description": "Base for all primitive types",
            "$extends": "#/$defs/NoType",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "string",
                        "number",
                        "integer",
                        "boolean",
                        "null",
                        "binary",
                        "int32",
                        "uint32",
                        "int64",
                        "uint64",
                        "int128",
                        "uint128",
                        "float",
                        "double",
                        "decimal",
                        "date",
                        "datetime",
                        "time",
                        "duration",
                        "uuid",
                        "uri",
                        "jsonpointer"
                    ]
                }
            },
            "additionalProperties": true
        },
        "OptionalType": {
            "type": "object",
            "$extends": "#/$defs/NoType",
            "abstract": true,
            "description": "Base for all types",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "string",
                        "number",
                        "integer",
                        "boolean",
                        "null",
                        "binary",
                        "int32",
                        "uint32",
                        "int64",
                        "uint64",
                        "int128",
                        "uint128",
                        "float",
                        "double",
                        "decimal",
                        "date",
                        "datetime",
                        "time",
                        "duration",
                        "uuid",
                        "uri",
                        "jsonpointer",
                        "object",
                        "array",
                        "map",
                        "set",
                        "tuple"
                    ]
                }
            },
            "additionalProperties": true
        },
        "Type": {
            "type": "object",
            "$extends": "#/$defs/OptionalType",
            "description": "Base for all schemas where a type is required (all except the schema document root, which might not be a schema)",
            "required": [
                "type"
            ]
        },
        "PrimitiveType": {
            "type": "object",
            "$extends": "#/$defs/OptionalPrimitiveType",
            "description": "Base for all schemas where a primitive type is required",
            "required": [
                "type"
            ]
        },
        "TypeReference": {
            "type": "object",
            "description": "A reference to an existing type definition",
            "properties": {
                "$ref": {
                    "type": "jsonpointer",
                    "description": "A JSON Pointer to an existing type definition within the same schema document"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the reference"
                }
            }
        },
        "PrimitiveOrReference": {
            "type": [
                {
                    "$ref": "#/$defs/TypeReference"
                },
                {
                    "$ref": "#/$defs/PrimitiveType"
                },
                {
                    "$ref": "#/$defs/TypeUnion"
                }
            ],
            "description": "A primitive type or a reference to a type definition"
        },
        "ObjectType": {
            "type": "object",
            "$extends": "#/$defs/OptionalType",
            "description": "A schema for an object",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "object"
                    ],
                    "description": "The type of the schema. Must be 'object'"
                },
                "abstract": {
                    "type": "boolean",
                    "description": "Whether this object is abstract and cannot be instantiated"
                },
                "$extends": {
                    "type": {
                        "$ref": "#/$defs/TypeReference"
                    },
                    "description": "The type that this object extends. Must be a reference to an abstract object schema"
                },
                "properties": {
                    "type": "map",
                    "values": {
                        "type": {
                            "$ref": "#/$defs/Property"
                        }
                    },
                    "description": "The properties of the object"
                },
                "required": {
                    "type": [
                        {
                            "$ref": "#/$defs/PropertyNameArray"
                        },
                        {
                            "$ref": "#/$defs/ArrayOfPropertyNameArray"
                        }
                    ],
                    "description": "The required properties of the object"
                },
                "additionalProperties": {
                    "type": [
                        "boolean",
                        {
                            "$ref": "#/$defs/TypeReference"
                        }
                    ],
                    "description": "Whether additional properties are allowed, and if so, what their schema is"
                }
            },
            "required": [
                "type",
                "properties"
            ]
        },
        "ArrayType": {
            "type": "object",
            "$extends": "#/$defs/OptionalType",
            "description": "A schema for an array",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "array"
                    ],
                    "description": "The type of the schema. Must be 'array'"
                },
                "items": {
                    "type": {
                        "$ref": "#/$defs/PrimitiveOrReference"
                    },
                    "description": "The schema for the items in the array"
                }
            },
            "required": [
                "type",
                "items"
            ]
        },
        "MapType": {
            "type": "object",
            "$extends": "#/$defs/OptionalType",
            "description": "A schema for a map",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "map"
                    ],
                    "description": "The type of the schema. Must be 'map'"
                },
                "values": {
                    "type": {
                        "$ref": "#/$defs/PrimitiveOrReference"
                    },
                    "description": "The schema for the values in the map"
                }
            },
            "required": [
                "type",
                "values"
            ]
        },
        "SetType": {
            "type": "object",
            "$extends": "#/$defs/OptionalType",
            "description": "A schema for a set",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "set"
                    ],
                    "description": "The type of the schema. Must be 'set'"
                },
                "items": {
                    "type": {
                        "$ref": "#/$defs/PrimitiveOrReference"
                    },
                    "description": "The schema for the items in the set"
                }
            },
            "required": [
                "type",
                "items"
            ]
        },
        "TupleType": {
            "type": "object",
            "$extends": "#/$defs/OptionalType",
            "description": "A schema for a tuple",
            "properties": {
                "type": {
                    "type": "string",
                    "enum": [
                        "tuple"
                    ],
                    "description": "The type of the schema. Must be 'tuple'"
                },
                "abstract": {
                    "type": "boolean",
                    "description": "Whether this object is abstract and cannot be instantiated"
                },
                "$extends": {
                    "type": {
                        "$ref": "#/$defs/TypeReference"
                    },
                    "description": "The type that this object extends. Must be a reference to an abstract object schema"
                },
                "properties": {
                    "type": "map",
                    "values": {
                        "type": {
                            "$ref": "#/$defs/Property"
                        }
                    },
                    "description": "The properties of the object"
                }
            },
            "required": [
                "type",
                "properties"
            ]
        },
        "TypeUnion": {
            "type": "set",
            "description": "A union of unique types",
            "items": {
                "type": [
                    {
                        "$ref": "#/$defs/TypeReference"
                    },
                    {
                        "$ref": "#/$defs/PrimitiveType"
                    }
                ]
            }
        },
        "Property": {
            "type": "object",
            "description": "A property of an object",
            "$extends": "#/$defs/NoType",
            "properties": {
                "type": {
                    "$ref": "#/$defs/Type",
                    "description": "The type of the property"
                },
                "description": {
                    "type": "string",
                    "description": "A description of the property"
                },
                "examples": {
                    "type": "array",
                    "items": {
                        "type": "map",
                        "values": {
                            "type": "any"
                        }
                    },
                    "description": "Examples of the property"
                }
            },
            "required": [
                "type"
            ]
        },
        "PropertyNameArray": {
            "type": "array",
            "items": {
                "type": "string"
            }
        },
        "ArrayOfPropertyNameArray": {
            "type": "array",
            "items": {
                "type": {
                    "$ref": "#/$defs/PropertyNameArray"
                }
            }
        },
        "Namespace": {
            "type": "map",
            "values": {
                "type": [
                    {
                        "$ref": "#/$defs/ObjectType"
                    },
                    {
                        "$ref": "#/$defs/ArrayType"
                    },
                    {
                        "$ref": "#/$defs/MapType"
                    },
                    {
                        "$ref": "#/$defs/SetType"
                    },
                    {
                        "$ref": "#/$defs/TupleType"
                    },
                    {
                        "$ref": "#/$defs/Namespace"
                    }
                ]
            }
        },
        "SchemaDocument": {
            "type": "object",
            "$extends": "#/$defs/OptionalType",
            "properties": {
                "$schema": {
                    "type": "uri",
                    "const": "https://json-structure.github.io/meta/core/v0/#"
                },
                "$id": {
                    "type": "uri",
                    "description": "The unique identifier for this schema document"
                },
                "$root": {
                    "type": "jsonpointer",
                    "description": "The root type of this schema document"
                },
                "$defs": {
                    "$ref": "#/$defs/Namespace"
                },
                "$offers": {
                    "type": "map",
                    "values": {
                        "type": {
                            "$ref": "#/$defs/TypeReference"
                        }
                    },
                    "description": "Add-in types offered by this schema"
                },
                "$uses": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    },
                    "description": "Names of features or add-ins used by this schema"
                }
            },
            "required": [
                "$schema"
            ],
            "additionalProperties": false
        }
    }
}